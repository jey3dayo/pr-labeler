{
  "initialization": {
    "starting": "Starting PR Labeler",
    "gettingInputs": "Getting action inputs...",
    "analyzingPr": "Analyzing PR #{{prNumber}} in {{owner}}/{{repo}}",
    "i18nInitializing": "Initializing i18n with language: {{language}}",
    "i18nInitialized": "i18n initialized successfully with language: {{language}}",
    "i18nLanguageChanged": "i18n language changed to: {{language}}",
    "i18nFailed": "Failed to initialize i18n: {{message}}. Falling back to English.",
    "configLoaded": "Configuration loaded from: {{path}}",
    "usingDefaultConfig": "Using default labeler configuration"
  },
  "analysis": {
    "gettingDiff": "Getting PR diff files...",
    "retrievedFiles": "Retrieved {{count}} files using {{strategy}} strategy",
    "analyzingFiles": "Analyzing files...",
    "analysisComplete": "Analysis complete:",
    "filesAnalyzed": "Files analyzed: {{count}}",
    "filesExcluded": "Files excluded: {{count}}",
    "binaryFilesSkipped": "Binary files skipped: {{count}}",
    "totalAdditions": "Total additions: {{count}}",
    "complexityAnalyzing": "Analyzing code complexity...",
    "complexityFilesToAnalyze": "Files to analyze: {{count}}",
    "complexityResults": "Max complexity: {{max}}, Avg: {{avg}}, Files: {{files}}"
  },
  "labels": {
    "loading": "Loading PR Labeler configuration...",
    "loadedCustom": "Loaded custom labeler configuration from .github/pr-labeler.yml",
    "merging": "Merging action inputs with labeler configuration...",
    "decidingLabels": "Deciding labels based on PR metrics...",
    "labelsToAdd": "Labels to add: {{labels}}",
    "labelsToRemove": "Labels to remove: {{labels}}",
    "applying": "Applying PR Labeler decisions...",
    "applied": "Applied: +{{added}} labels, -{{removed}} labels",
    "applyFailed": "Failed to apply labels: {{message}}",
    "apiCalls": "API calls: {{count}}",
    "skipped": "Skipped label operations (insufficient permissions)",
    "dryRun": "Dry run: skipping label API calls (decisions logged above)"
  },
  "directoryLabeling": {
    "starting": "Starting Directory-Based Labeling...",
    "configNotFound": "Configuration file not found: {{path}}",
    "skipped": "Skipping directory-based labeling",
    "configLoadFailed": "Failed to load configuration: {{message}}",
    "decideFailed": "Failed to decide labels: {{message}}",
    "decided": "Decided {{count}} labels from file paths",
    "noLabelsMatched": "No labels matched for changed files",
    "rejected": "Rejected {{count}} labels due to max_labels limit",
    "rejectedDetail": "  - {{label}}: {{reason}}",
    "applyResult": "Applied: {{applied}}, Skipped: {{skipped}}, Removed: {{removed}}, Failed: {{failed}}",
    "applyFailed": "Failed to apply labels: {{message}}",
    "permissionError": "Permission error: {{message}}",
    "permissionHint": "Ensure the GITHUB_TOKEN has 'pull-requests: write' permissions",
    "failedDetail": "  - {{label}}: {{reason}}"
  },
  "comment": {
    "managing": "Managing PR comment...",
    "manageFailed": "Failed to manage comment: {{message}}",
    "action": "Comment {{action}}"
  },
  "summary": {
    "writing": "Writing GitHub Actions Summary...",
    "writeFailed": "Failed to write summary: {{message}}",
    "written": "Summary written successfully ({{bytes}} bytes)"
  },
  "ciStatus": {
    "fetching": "Fetching CI status for risk evaluation...",
    "status": "CI Status: tests={{tests}}, typeCheck={{typeCheck}}, build={{build}}, lint={{lint}}",
    "notAvailable": "CI status not available",
    "fetchedCommits": "Fetched {{count}} commit messages",
    "fetchCommitsFailed": "Failed to fetch commit messages"
  },
  "draft": {
    "skipping": "Skipping draft PR as skip_draft_pr is enabled",
    "summaryWritten": "Summary written for draft PR"
  },
  "violations": {
    "detected": "Violations detected:",
    "largeFiles": "{{count}} large file(s)",
    "exceedsFileLines": "{{count}} file(s) exceed line limit",
    "exceedsAdditions": "Total additions exceed limit",
    "exceedsFileCount": "File count exceeds limit",
    "allChecksPassed": "All checks passed!"
  },
  "completion": {
    "success": "PR Labeler completed successfully",
    "skippedDraft": "PR Labeler completed (skipped draft PR)",
    "failed": "Action failed: {{message}}",
    "failedViolations": "PR contains violations and fail_on_violation is enabled"
  }
}
