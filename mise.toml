[env]
# 環境変数の読み込み
_.file = [".env"]
_.path = ['./node_modules/.bin']

[tools]
node = '22'
"npm:pnpm" = '10.18.3'
fd = 'latest'

[tasks]
# === 統合タスク ===
[tasks.format]
description = "コードとドキュメントのフォーマット"
depends = ["pnpm:format", "docs:fix"]

[tasks."pnpm:format"]
run = "pnpm format"

[tasks.lint]
description = "コード品質チェック（ESLint + TypeScript + Prettier）"
run = "pnpm lint"

[tasks.test]
description = "テスト実行"
run = "pnpm test"
env = { CI = "1", VITE_CJS_IGNORE_WARNING = "true" }

[tasks.build]
description = "ビルド実行"
run = "pnpm build"

# === 開発支援 ===
[tasks."dev:debug"]
description = "デバッグモードで開発サーバー起動"
run = "tsx --inspect src/index.ts"
env = { NODE_ENV = "development" }

[tasks."build:watch"]
description = "ビルドをwatchモードで実行"
run = "ncc build src/index.ts -o dist --watch"

# === CI/CD ===
[tasks.ci]
description = "CI/CD用の完全品質チェック"
depends = ["format", "lint", "test", "build", "docs:check"]

[tasks.quick]
description = "開発中のクイックチェック"
run = "pnpm test:quick"

# === セットアップ ===
[tasks.setup]
description = "プロジェクト初期セットアップ"
depends = ["setup:install", "build", "test"]

[tasks."setup:install"]
run = "pnpm install"

# === ドキュメント ===
[tasks."docs:lint"]
description = "Markdownファイルのlint"
run = "pnpx markdownlint-cli2 '**/*.md'"

[tasks."docs:links"]
description = "Markdownリンクチェック"
run = "fd -e md -X pnpx markdown-link-check --config .markdown-link-check.json --quiet"

[tasks."docs:links:verbose"]
description = "Markdownリンクチェック（詳細）"
run = "fd -e md -X pnpx markdown-link-check --config .markdown-link-check.json --verbose"

[tasks."docs:check"]
description = "全Markdownドキュメントのlintとリンクチェック"
depends = ["docs:lint", "docs:links"]

[tasks."docs:fix"]
description = "Markdownドキュメントの自動修正"
run = "pnpx markdownlint-cli2 --fix '**/*.md'"

# === GitHub Actions ===
[tasks."action:test"]
description = "GitHub Actionをローカルでテスト実行"
run = "act pull_request -W .github/workflows/test.yml"

# === クリーンアップ ===
[tasks.clean]
description = "ビルド成果物とキャッシュをクリア"
run = [
  'rm -rf dist',
  'rm -rf coverage',
  'rm -rf node_modules/.cache',
  'rm -rf .vitest',
  'rm -f .eslintcache',
  'rm -f .prettiercache',
  'rm -f .tsbuildinfo',
]

[tasks."clean:full"]
description = "完全クリーンアップ（node_modules含む）"
depends = ["clean", "clean:modules"]

[tasks."clean:modules"]
run = ['rm -rf node_modules', 'rm -f pnpm-lock.yaml']

# === コミット前チェック ===
[tasks."pre-commit"]
description = "コミット前の自動チェックと修正"
depends = ["format", "quick"]
